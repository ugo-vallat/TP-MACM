$date
  Thu Apr  3 15:35:17 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module test_etage_fe $end
$var reg 32 ! npc[31:0] $end
$var reg 32 " npc_fw_br[31:0] $end
$var reg 1 # pcsrc_er $end
$var reg 1 $ bpris_ex $end
$var reg 1 % gel_li $end
$var reg 1 & e_clk $end
$scope module l1 $end
$var reg 32 ' npc[31:0] $end
$var reg 32 ( npc_fw_br[31:0] $end
$var reg 1 ) pcsrc_er $end
$var reg 1 * bpris_ex $end
$var reg 1 + gel_li $end
$var reg 1 , clk $end
$var reg 32 - pc_plus_4[31:0] $end
$var reg 32 . i_fe[31:0] $end
$var reg 32 / pc_inter[31:0] $end
$var reg 32 0 pc_reg_in[31:0] $end
$var reg 32 1 pc_reg_out[31:0] $end
$var reg 32 2 sig_pc_plus_4[31:0] $end
$var reg 32 3 sig_4[31:0] $end
$scope module inst_mem_1 $end
$var reg 32 4 addr[31:0] $end
$var reg 32 5 instr[31:0] $end
$scope module mem $end
$var reg 32 6 a[31:0] $end
$var reg 32 7 rd[31:0] $end
$upscope $end
$upscope $end
$scope module add_pc_4 $end
$var reg 32 8 a[31:0] $end
$var reg 32 9 b[31:0] $end
$var reg 1 : cin $end
$var reg 32 ; s[31:0] $end
$var reg 1 < c30 $end
$var reg 1 = c31 $end
$var reg 33 > carry[32:0] $end
$scope module for1(0) $end
$scope module addi $end
$var reg 1 ? a $end
$var reg 1 @ b $end
$var reg 1 A cin $end
$var reg 1 B s $end
$var reg 1 C cout $end
$upscope $end
$upscope $end
$scope module for1(1) $end
$scope module addi $end
$var reg 1 D a $end
$var reg 1 E b $end
$var reg 1 F cin $end
$var reg 1 G s $end
$var reg 1 H cout $end
$upscope $end
$upscope $end
$scope module for1(2) $end
$scope module addi $end
$var reg 1 I a $end
$var reg 1 J b $end
$var reg 1 K cin $end
$var reg 1 L s $end
$var reg 1 M cout $end
$upscope $end
$upscope $end
$scope module for1(3) $end
$scope module addi $end
$var reg 1 N a $end
$var reg 1 O b $end
$var reg 1 P cin $end
$var reg 1 Q s $end
$var reg 1 R cout $end
$upscope $end
$upscope $end
$scope module for1(4) $end
$scope module addi $end
$var reg 1 S a $end
$var reg 1 T b $end
$var reg 1 U cin $end
$var reg 1 V s $end
$var reg 1 W cout $end
$upscope $end
$upscope $end
$scope module for1(5) $end
$scope module addi $end
$var reg 1 X a $end
$var reg 1 Y b $end
$var reg 1 Z cin $end
$var reg 1 [ s $end
$var reg 1 \ cout $end
$upscope $end
$upscope $end
$scope module for1(6) $end
$scope module addi $end
$var reg 1 ] a $end
$var reg 1 ^ b $end
$var reg 1 _ cin $end
$var reg 1 ` s $end
$var reg 1 a cout $end
$upscope $end
$upscope $end
$scope module for1(7) $end
$scope module addi $end
$var reg 1 b a $end
$var reg 1 c b $end
$var reg 1 d cin $end
$var reg 1 e s $end
$var reg 1 f cout $end
$upscope $end
$upscope $end
$scope module for1(8) $end
$scope module addi $end
$var reg 1 g a $end
$var reg 1 h b $end
$var reg 1 i cin $end
$var reg 1 j s $end
$var reg 1 k cout $end
$upscope $end
$upscope $end
$scope module for1(9) $end
$scope module addi $end
$var reg 1 l a $end
$var reg 1 m b $end
$var reg 1 n cin $end
$var reg 1 o s $end
$var reg 1 p cout $end
$upscope $end
$upscope $end
$scope module for1(10) $end
$scope module addi $end
$var reg 1 q a $end
$var reg 1 r b $end
$var reg 1 s cin $end
$var reg 1 t s $end
$var reg 1 u cout $end
$upscope $end
$upscope $end
$scope module for1(11) $end
$scope module addi $end
$var reg 1 v a $end
$var reg 1 w b $end
$var reg 1 x cin $end
$var reg 1 y s $end
$var reg 1 z cout $end
$upscope $end
$upscope $end
$scope module for1(12) $end
$scope module addi $end
$var reg 1 { a $end
$var reg 1 | b $end
$var reg 1 } cin $end
$var reg 1 !" s $end
$var reg 1 "" cout $end
$upscope $end
$upscope $end
$scope module for1(13) $end
$scope module addi $end
$var reg 1 #" a $end
$var reg 1 $" b $end
$var reg 1 %" cin $end
$var reg 1 &" s $end
$var reg 1 '" cout $end
$upscope $end
$upscope $end
$scope module for1(14) $end
$scope module addi $end
$var reg 1 (" a $end
$var reg 1 )" b $end
$var reg 1 *" cin $end
$var reg 1 +" s $end
$var reg 1 ," cout $end
$upscope $end
$upscope $end
$scope module for1(15) $end
$scope module addi $end
$var reg 1 -" a $end
$var reg 1 ." b $end
$var reg 1 /" cin $end
$var reg 1 0" s $end
$var reg 1 1" cout $end
$upscope $end
$upscope $end
$scope module for1(16) $end
$scope module addi $end
$var reg 1 2" a $end
$var reg 1 3" b $end
$var reg 1 4" cin $end
$var reg 1 5" s $end
$var reg 1 6" cout $end
$upscope $end
$upscope $end
$scope module for1(17) $end
$scope module addi $end
$var reg 1 7" a $end
$var reg 1 8" b $end
$var reg 1 9" cin $end
$var reg 1 :" s $end
$var reg 1 ;" cout $end
$upscope $end
$upscope $end
$scope module for1(18) $end
$scope module addi $end
$var reg 1 <" a $end
$var reg 1 =" b $end
$var reg 1 >" cin $end
$var reg 1 ?" s $end
$var reg 1 @" cout $end
$upscope $end
$upscope $end
$scope module for1(19) $end
$scope module addi $end
$var reg 1 A" a $end
$var reg 1 B" b $end
$var reg 1 C" cin $end
$var reg 1 D" s $end
$var reg 1 E" cout $end
$upscope $end
$upscope $end
$scope module for1(20) $end
$scope module addi $end
$var reg 1 F" a $end
$var reg 1 G" b $end
$var reg 1 H" cin $end
$var reg 1 I" s $end
$var reg 1 J" cout $end
$upscope $end
$upscope $end
$scope module for1(21) $end
$scope module addi $end
$var reg 1 K" a $end
$var reg 1 L" b $end
$var reg 1 M" cin $end
$var reg 1 N" s $end
$var reg 1 O" cout $end
$upscope $end
$upscope $end
$scope module for1(22) $end
$scope module addi $end
$var reg 1 P" a $end
$var reg 1 Q" b $end
$var reg 1 R" cin $end
$var reg 1 S" s $end
$var reg 1 T" cout $end
$upscope $end
$upscope $end
$scope module for1(23) $end
$scope module addi $end
$var reg 1 U" a $end
$var reg 1 V" b $end
$var reg 1 W" cin $end
$var reg 1 X" s $end
$var reg 1 Y" cout $end
$upscope $end
$upscope $end
$scope module for1(24) $end
$scope module addi $end
$var reg 1 Z" a $end
$var reg 1 [" b $end
$var reg 1 \" cin $end
$var reg 1 ]" s $end
$var reg 1 ^" cout $end
$upscope $end
$upscope $end
$scope module for1(25) $end
$scope module addi $end
$var reg 1 _" a $end
$var reg 1 `" b $end
$var reg 1 a" cin $end
$var reg 1 b" s $end
$var reg 1 c" cout $end
$upscope $end
$upscope $end
$scope module for1(26) $end
$scope module addi $end
$var reg 1 d" a $end
$var reg 1 e" b $end
$var reg 1 f" cin $end
$var reg 1 g" s $end
$var reg 1 h" cout $end
$upscope $end
$upscope $end
$scope module for1(27) $end
$scope module addi $end
$var reg 1 i" a $end
$var reg 1 j" b $end
$var reg 1 k" cin $end
$var reg 1 l" s $end
$var reg 1 m" cout $end
$upscope $end
$upscope $end
$scope module for1(28) $end
$scope module addi $end
$var reg 1 n" a $end
$var reg 1 o" b $end
$var reg 1 p" cin $end
$var reg 1 q" s $end
$var reg 1 r" cout $end
$upscope $end
$upscope $end
$scope module for1(29) $end
$scope module addi $end
$var reg 1 s" a $end
$var reg 1 t" b $end
$var reg 1 u" cin $end
$var reg 1 v" s $end
$var reg 1 w" cout $end
$upscope $end
$upscope $end
$scope module for1(30) $end
$scope module addi $end
$var reg 1 x" a $end
$var reg 1 y" b $end
$var reg 1 z" cin $end
$var reg 1 {" s $end
$var reg 1 |" cout $end
$upscope $end
$upscope $end
$scope module for1(31) $end
$scope module addi $end
$var reg 1 }" a $end
$var reg 1 !# b $end
$var reg 1 "# cin $end
$var reg 1 ## s $end
$var reg 1 $# cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module pd_reg $end
$var reg 32 %# source[31:0] $end
$var reg 32 &# output[31:0] $end
$var reg 1 '# wr $end
$var reg 1 (# raz $end
$var reg 1 )# clk $end
$var reg 32 *# sig[31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000000000000000 !
b00000000000000000000000000000000 "
1#
0$
0%
1&
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
1)
0*
0+
1,
b00000000000000000000000000000100 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000100 2
b00000000000000000000000000000100 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000100 9
0:
b00000000000000000000000000000100 ;
0<
0=
b000000000000000000000000000000000 >
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
1J
0K
1L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
0Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0!#
0"#
0##
0$#
b00000000000000000000000000000000 %#
b00000000000000000000000000000000 &#
0'#
1(#
1)#
b00000000000000000000000000000000 *#
#5000000
0&
0,
0)#
#10000000
1&
1,
1)#
#12500000
0#
1%
0)
1+
b00000000000000000000000000000100 /
b00000000000000000000000000000100 0
b00000000000000000000000000000100 %#
1'#
#15000000
0&
0,
0)#
#20000000
1&
1,
b00000000000000000000000000001000 -
b00000000000000000000000000000001 .
b00000000000000000000000000001000 /
b00000000000000000000000000001000 0
b00000000000000000000000000000100 1
b00000000000000000000000000001000 2
b00000000000000000000000000000100 4
b00000000000000000000000000000001 5
b00000000000000000000000000000100 6
b00000000000000000000000000000001 7
b00000000000000000000000000000100 8
b00000000000000000000000000001000 ;
b000000000000000000000000000001000 >
1I
0L
1M
1P
1Q
b00000000000000000000000000001000 %#
b00000000000000000000000000000100 &#
1)#
b00000000000000000000000000000100 *#
#25000000
0&
0,
0)#
#30000000
1&
1,
b00000000000000000000000000001100 -
b00000000000000000000000000000010 .
b00000000000000000000000000001100 /
b00000000000000000000000000001100 0
b00000000000000000000000000001000 1
b00000000000000000000000000001100 2
b00000000000000000000000000001000 4
b00000000000000000000000000000010 5
b00000000000000000000000000001000 6
b00000000000000000000000000000010 7
b00000000000000000000000000001000 8
b00000000000000000000000000001100 ;
b000000000000000000000000000000000 >
0I
1L
0M
1N
0P
1Q
0R
0U
0V
b00000000000000000000000000001100 %#
b00000000000000000000000000001000 &#
1)#
b00000000000000000000000000001000 *#
#35000000
0&
0,
0)#
#40000000
1&
1,
b00000000000000000000000000010000 -
b00000000000000000000000000000011 .
b00000000000000000000000000010000 /
b00000000000000000000000000010000 0
b00000000000000000000000000001100 1
b00000000000000000000000000010000 2
b00000000000000000000000000001100 4
b00000000000000000000000000000011 5
b00000000000000000000000000001100 6
b00000000000000000000000000000011 7
b00000000000000000000000000001100 8
b00000000000000000000000000010000 ;
b000000000000000000000000000011000 >
1I
0L
1M
1P
0Q
1R
1U
1V
b00000000000000000000000000010000 %#
b00000000000000000000000000001100 &#
1)#
b00000000000000000000000000001100 *#
#45000000
0&
0,
0)#
#50000000
1&
1,
b00000000000000000000000000010100 -
b00000000000000000000000000000100 .
b00000000000000000000000000010100 /
b00000000000000000000000000010100 0
b00000000000000000000000000010000 1
b00000000000000000000000000010100 2
b00000000000000000000000000010000 4
b00000000000000000000000000000100 5
b00000000000000000000000000010000 6
b00000000000000000000000000000100 7
b00000000000000000000000000010000 8
b00000000000000000000000000010100 ;
b000000000000000000000000000000000 >
0I
1L
0M
0N
0P
0Q
0R
1S
0U
1V
0W
0Z
0[
b00000000000000000000000000010100 %#
b00000000000000000000000000010000 &#
1)#
b00000000000000000000000000010000 *#
#52500000
#55000000
0&
0,
0)#
#60000000
1&
1,
b00000000000000000000000000011000 -
b00000000000000000000000000000101 .
b00000000000000000000000000011000 /
b00000000000000000000000000011000 0
b00000000000000000000000000010100 1
b00000000000000000000000000011000 2
b00000000000000000000000000010100 4
b00000000000000000000000000000101 5
b00000000000000000000000000010100 6
b00000000000000000000000000000101 7
b00000000000000000000000000010100 8
b00000000000000000000000000011000 ;
b000000000000000000000000000001000 >
1I
0L
1M
1P
1Q
b00000000000000000000000000011000 %#
b00000000000000000000000000010100 &#
1)#
b00000000000000000000000000010100 *#
#62500000
b00000000000000000000000011111111 !
1#
b00000000000000000000000011111111 '
1)
b00000000000000000000000011111111 /
b00000000000000000000000011111111 0
b00000000000000000000000011111111 %#
#65000000
0&
0,
0)#
#70000000
1&
1,
b00000000000000000000000100000011 -
b00000000000000000000000000000000 .
b00000000000000000000000011111111 1
b00000000000000000000000100000011 2
b00000000000000000000000011111111 4
b00000000000000000000000000000000 5
b00000000000000000000000011111111 6
b00000000000000000000000000000000 7
b00000000000000000000000011111111 8
b00000000000000000000000100000011 ;
b000000000000000000000000111111000 >
1?
1B
1D
1G
1N
0Q
1R
1U
0V
1W
1X
1Z
0[
1\
1]
1_
0`
1a
1b
1d
0e
1f
1i
1j
b00000000000000000000000011111111 &#
1)#
b00000000000000000000000011111111 *#
#72500000
0#
0)
b00000000000000000000000100000011 /
b00000000000000000000000100000011 0
b00000000000000000000000100000011 %#
#75000000
0&
0,
0)#
#80000000
1&
1,
b00000000000000000000000100000111 -
b00000000000000000000000100000111 /
b00000000000000000000000100000111 0
b00000000000000000000000100000011 1
b00000000000000000000000100000111 2
b00000000000000000000000100000011 4
b00000000000000000000000100000011 6
b00000000000000000000000100000011 8
b00000000000000000000000100000111 ;
b000000000000000000000000000000000 >
0I
1L
0M
0N
0P
0Q
0R
0S
0U
0V
0W
0X
0Z
0[
0\
0]
0_
0`
0a
0b
0d
0e
0f
1g
0i
1j
0k
0n
0o
b00000000000000000000000100000111 %#
b00000000000000000000000100000011 &#
1)#
b00000000000000000000000100000011 *#
#85000000
0&
0,
0)#
#90000000
1&
1,
b00000000000000000000000100001011 -
b00000000000000000000000000000001 .
b00000000000000000000000100001011 /
b00000000000000000000000100001011 0
b00000000000000000000000100000111 1
b00000000000000000000000100001011 2
b00000000000000000000000100000111 4
b00000000000000000000000000000001 5
b00000000000000000000000100000111 6
b00000000000000000000000000000001 7
b00000000000000000000000100000111 8
b00000000000000000000000100001011 ;
b000000000000000000000000000001000 >
1I
0L
1M
1P
1Q
b00000000000000000000000100001011 %#
b00000000000000000000000100000111 &#
1)#
b00000000000000000000000100000111 *#
#92500000
#95000000
0&
0,
0)#
#100000000
1&
1,
b00000000000000000000000100001111 -
b00000000000000000000000000000010 .
b00000000000000000000000100001111 /
b00000000000000000000000100001111 0
b00000000000000000000000100001011 1
b00000000000000000000000100001111 2
b00000000000000000000000100001011 4
b00000000000000000000000000000010 5
b00000000000000000000000100001011 6
b00000000000000000000000000000010 7
b00000000000000000000000100001011 8
b00000000000000000000000100001111 ;
b000000000000000000000000000000000 >
0I
1L
0M
1N
0P
1Q
0R
0U
0V
b00000000000000000000000100001111 %#
b00000000000000000000000100001011 &#
1)#
b00000000000000000000000100001011 *#
#102500000
b00000000000000000000000011111111 "
1$
b00000000000000000000000011111111 (
1*
b00000000000000000000000011111111 0
b00000000000000000000000011111111 %#
#105000000
0&
0,
0)#
#110000000
1&
1,
b00000000000000000000000100000011 -
b00000000000000000000000000000000 .
b00000000000000000000000100000011 /
b00000000000000000000000011111111 1
b00000000000000000000000100000011 2
b00000000000000000000000011111111 4
b00000000000000000000000000000000 5
b00000000000000000000000011111111 6
b00000000000000000000000000000000 7
b00000000000000000000000011111111 8
b00000000000000000000000100000011 ;
b000000000000000000000000111111000 >
1I
0L
1M
1P
0Q
1R
1S
1U
0V
1W
1X
1Z
0[
1\
1]
1_
0`
1a
1b
1d
0e
1f
0g
1i
1j
b00000000000000000000000011111111 &#
1)#
b00000000000000000000000011111111 *#
#112500000
0$
0*
b00000000000000000000000100000011 0
b00000000000000000000000100000011 %#
#115000000
0&
0,
0)#
#120000000
1&
1,
b00000000000000000000000100000111 -
b00000000000000000000000100000111 /
b00000000000000000000000100000111 0
b00000000000000000000000100000011 1
b00000000000000000000000100000111 2
b00000000000000000000000100000011 4
b00000000000000000000000100000011 6
b00000000000000000000000100000011 8
b00000000000000000000000100000111 ;
b000000000000000000000000000000000 >
0I
1L
0M
0N
0P
0Q
0R
0S
0U
0V
0W
0X
0Z
0[
0\
0]
0_
0`
0a
0b
0d
0e
0f
1g
0i
1j
0k
0n
0o
b00000000000000000000000100000111 %#
b00000000000000000000000100000011 &#
1)#
b00000000000000000000000100000011 *#
#125000000
0&
0,
0)#
#130000000
1&
1,
b00000000000000000000000100001011 -
b00000000000000000000000000000001 .
b00000000000000000000000100001011 /
b00000000000000000000000100001011 0
b00000000000000000000000100000111 1
b00000000000000000000000100001011 2
b00000000000000000000000100000111 4
b00000000000000000000000000000001 5
b00000000000000000000000100000111 6
b00000000000000000000000000000001 7
b00000000000000000000000100000111 8
b00000000000000000000000100001011 ;
b000000000000000000000000000001000 >
1I
0L
1M
1P
1Q
b00000000000000000000000100001011 %#
b00000000000000000000000100000111 &#
1)#
b00000000000000000000000100000111 *#
#132500000
#135000000
0&
0,
0)#
#140000000
1&
1,
b00000000000000000000000100001111 -
b00000000000000000000000000000010 .
b00000000000000000000000100001111 /
b00000000000000000000000100001111 0
b00000000000000000000000100001011 1
b00000000000000000000000100001111 2
b00000000000000000000000100001011 4
b00000000000000000000000000000010 5
b00000000000000000000000100001011 6
b00000000000000000000000000000010 7
b00000000000000000000000100001011 8
b00000000000000000000000100001111 ;
b000000000000000000000000000000000 >
0I
1L
0M
1N
0P
1Q
0R
0U
0V
b00000000000000000000000100001111 %#
b00000000000000000000000100001011 &#
1)#
b00000000000000000000000100001011 *#
#142500000
0%
0+
0'#
#145000000
0&
0,
0)#
#150000000
1&
1,
1)#
#155000000
0&
0,
0)#
#160000000
1&
1,
1)#
#165000000
0&
0,
0)#
#170000000
1&
1,
1)#
#175000000
0&
0,
0)#
#180000000
1&
1,
1)#
#182500000
#185000000
0&
0,
0)#
#190000000
1&
1,
1)#
